'use strict';
/** 
 * sonar (PubSub)
 * 
 * PubSub
 */
// Decorator for public methods

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.sonar = void 0;

var _sonar = require("./sonar.decorator");

// Main export
var sonar = function () {
  /**
   * Echos store all event string and their 
   * associated callback functions.
   */
  var echos = {};
  /**
   * @function on
   * Store a callback function in an event key
   * in the echos object.
   * 
   * @param {String} e - A custom event name
   * @param {Function} cb - A callback function
   */

  var on = function on(e, cb) {
    echos = (0, _sonar._on)(echos, e, cb);
  };
  /**
   * @function off
   * Turn off a given event string or event string
   * callback function from the echos object.
   * 
   * @param {String} e - A custom event name
   * @param {Function} [cb] - An optional callback function
   */


  var off = function off(e) {
    var cb = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
    echos = (0, _sonar._off)(echos, e, cb);
  };
  /**
   * @function trigger
   * Trigger an event string and its associated callbacks
   * in the echos object.
   * 
   * @param {String} e - A custom event name
   * @param {*} d - An optional data packet
   */


  var trigger = function trigger(e) {
    var d = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    return echos[e] ? echos[e].forEach(function (cb) {
      return cb(d);
    }) : null;
  }; // Public API


  return {
    on: on,
    off: off,
    trigger: trigger
  };
}();

exports.sonar = sonar;
